<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.11</version>
        <relativePath/> <!-- lookup parent from a repository -->
    </parent>
    <groupId>jonathan.modern-design</groupId>
    <artifactId>md</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>ModernDesign</name>
    <description>Sample of good modern design</description>
    <properties>
        <java.version>21</java.version>
        <spring-modulith.version>1.3.3</spring-modulith.version>
        <querydsl.version>5.1.0</querydsl.version>
    </properties>
    <dependencies>
        <!-- BEGIN API -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-graphql</artifactId>
        </dependency>
        <!-- END API -->
        <!-- BEGIN DEV -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.modulith</groupId>
            <artifactId>spring-modulith-events-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.modulith</groupId>
            <artifactId>spring-modulith-starter-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.modulith</groupId>
            <artifactId>spring-modulith-actuator</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.modulith</groupId>
            <artifactId>spring-modulith-observability</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.modulith</groupId>
            <artifactId>spring-modulith-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- END DEV -->
        <!-- BEGIN TEST -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>com.approvaltests</groupId>
            <artifactId>approvaltests</artifactId>
            <version>24.14.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5</artifactId>
            <version>1.4.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.openapitools.openapidiff</groupId>
            <artifactId>openapi-diff-maven</artifactId>
            <version>2.0.1</version>
        </dependency>
        <!-- END TEST -->
        <!-- BEGIN DB -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
            <classifier>jakarta</classifier>
            <version>${querydsl.version}</version>
        </dependency>
        <!-- END DB -->
        <!-- BEGIN SECURITY -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>4.3.0</version>
        </dependency>
        <!-- END SECURITY -->
        <!-- BEGIN OBSERVABILITY -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- END OBSERVABILITY -->
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.modulith</groupId>
                <artifactId>spring-modulith-bom</artifactId>
                <version>${spring-modulith.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
            </plugin>

            <!-- BEGIN SPRINGBOOT -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- END SPRINGBOOT -->

            <!-- Typically: runs after every commit, takes 10-20 minutes, runs mockito-only, in-memory tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- folder pattern -->
                    <excludes>
                        <exclude>**/spring/**</exclude>
                    </excludes>
                    <!-- or: -->
                    <excludedGroups>integration</excludedGroups>
                </configuration>
            </plugin>

            <!-- BEGIN INTEGRATION TESTS -->
            <!-- Typically: runs during nightly build, takes 10-2000 minutes. Typically, startup Spring, Databases, Dockers, WireMock -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <includes>
                        <!-- by default, the test class names must end in IT -->
                        <include>**/*</include>
                    </includes>
                    <!-- or -->
                    <groups>integration</groups>
                </configuration>
            </plugin>
            <!-- END INTEGRATION TESTS -->

            <!-- BEGIN MAPSTRUCT WITH LOMBOK SYNC PLUGIN -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!-- END MAPSTRUCT WITH LOMBOK SYNC PLUGIN -->

            <!-- BEGIN QUERYDSL PLUGIN -->
            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>1.1.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/generated-sources/java</outputDirectory>
                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.querydsl</groupId>
                        <artifactId>querydsl-apt</artifactId>
                        <version>${querydsl.version}</version>
                        <classifier>jakarta</classifier>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- END QUERYDSL PLUGIN -->

            <!--            <plugin>-->
            <!--                <groupId>org.openapitools</groupId>-->
            <!--                <artifactId>openapi-generator-maven-plugin</artifactId>-->
            <!--                <version>6.3.0</version>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <goals>-->
            <!--                            <goal>generate</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            &lt;!&ndash; Generate client stubs based on consumed contract &ndash;&gt;-->
            <!--                            <inputSpec>clean-application/ldap-api-docs.yaml</inputSpec>-->
            <!--                            <generatorName>java</generatorName>-->
            <!--                            <library>resttemplate</library>-->
            <!--                            <apiPackage>jonathan.modern-design</apiPackage>-->
            <!--                            <modelPackage>jonathan.modern-design</modelPackage>-->
            <!--                            <generateApiTests>false</generateApiTests>-->
            <!--                            <generateModelTests>false</generateModelTests>-->
            <!--                            <modelNameSuffix>Dto</modelNameSuffix>-->
            <!--                            <configOptions>-->
            <!--                                <useJakartaEe>true</useJakartaEe>-->
            <!--                                <jakarta>true</jakarta>-->
            <!--                                <openApiNullable>false</openApiNullable>-->
            <!--                            </configOptions>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->

            <!--            <plugin>-->
            <!--                <groupId>org.pitest</groupId>-->
            <!--                <artifactId>pitest-maven</artifactId>-->
            <!--                <version>1.9.11</version>-->

            <!--                &lt;!&ndash; adds support for JUnit5 &ndash;&gt;-->
            <!--                <dependencies>-->
            <!--                    <dependency>-->
            <!--                        <groupId>org.pitest</groupId>-->
            <!--                        <artifactId>pitest-junit5-plugin</artifactId>-->
            <!--                        <version>0.14</version>-->
            <!--                    </dependency>-->
            <!--                </dependencies>-->

            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <userId>pit-report</userId>-->
            <!--                        &lt;!&ndash; optional &ndash;&gt;-->
            <!--                        <phase>test</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>mutationCoverage</goal>-->
            <!--                            &lt;!&ndash; only run mutation coverage on changed FILES &ndash;&gt;-->
            <!--                            &lt;!&ndash; https://twitter.com/_HamzaBlm/status/1449529008501272579?s=20 &ndash;&gt;-->
            <!--                            &lt;!&ndash; mvn org.pitest:pitest-maven:scmMutationCoverage -Dinclude=ADDED,UNKNOWN -DmutationThreshold=85 -DoriginalBranch & -DdestinationBranch&ndash;&gt;-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->

            <!--                <configuration>-->
            <!--                    <targetClasses>-->
            <!--                        <param>com.jonathan.modern_design.*</param>-->
            <!--                    </targetClasses>-->
            <!--                    <targetTests>-->
            <!--                        <param>com.jonathan.modern_design.*Test</param>-->
            <!--                    </targetTests>-->
            <!--                    <mutators>-->
            <!--                        <mutator>NON_VOID_METHOD_CALLS</mutator>-->
            <!--                    </mutators>-->
            <!--                </configuration>-->
            <!--            </plugin>-->
        </plugins>
    </build>

</project>
